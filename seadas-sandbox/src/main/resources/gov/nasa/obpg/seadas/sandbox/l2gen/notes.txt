L2gen design notes:



//todo New: Categorization
We want to add a new layer of categorization as defined in the xml file productCategories.xml.
We want to combined the waveDependent and waveIndependent products together within this list.


// todo ifile ofile stuff

// todo make run button do something









//    private void createWaveIndependentProductsJPanel(JPanel waveIndependentProductsJPanel) {
//
//        createWaveIndependentProductsJList();
//
//        JScrollPane waveIndependentProductsJScrollPane = new JScrollPane(waveIndependentProductsJList);
//        waveIndependentProductsJScrollPane.setMinimumSize(new Dimension(400, 400));
//        waveIndependentProductsJScrollPane.setMaximumSize(new Dimension(400, 400));
//        waveIndependentProductsJScrollPane.setPreferredSize(new Dimension(400, 400));
//
//        waveIndependentProductsJPanel.setBorder(BorderFactory.createTitledBorder(WAVE_INDEPENDENT_PRODUCTS_JPANEL_TITLE));
//        waveIndependentProductsJPanel.setLayout(new GridBagLayout());
//
//        // Add to waveIndependentProductsJPanel grid cell
//        GridBagConstraints c = SeadasGuiUtils.makeConstraints(0, 0);
//        c.fill = GridBagConstraints.BOTH;
//        c.weightx = 1;
//        c.weighty = 1;
//        waveIndependentProductsJPanel.add(waveIndependentProductsJScrollPane, c);
//    }


//    private void createWaveIndependentProductsJList() {
//
//        waveIndependentProductsJList = new JList();
//
//        setWaveIndependentProductsJList();
//
//        // add listener to control
//        waveIndependentProductsJList.addListSelectionListener(new ListSelectionListener() {
//            @Override
//            public void valueChanged(ListSelectionEvent e) {
//                if (handleWaveIndependentProductsJListEnabled) {
//                    handleWaveIndependentProductsJList();
//                }
//            }
//        });
//    }


//    private void setWaveIndependentProductsJList() {
//        // Create arrayList for all the algorithmInfo objects
//        ArrayList<AlgorithmInfo> algorithmInfoArrayList = new ArrayList<AlgorithmInfo>();
//
//        for (ProductInfo productInfo : l2genData.getWaveIndependentProductInfoArray()) {
//            for (BaseInfo algorithmInfo : productInfo.getChildren()) {
//                ((AlgorithmInfo) algorithmInfo).setToStringShowProductName(true);
//                algorithmInfoArrayList.add((AlgorithmInfo) algorithmInfo);
//            }
//        }
//
//        // Store the arrayList into an array which can then be fed into a JList control
//        AlgorithmInfo[] algorithmInfoArray = new AlgorithmInfo[algorithmInfoArrayList.size()];
//        algorithmInfoArrayList.toArray(algorithmInfoArray);
//
//        // format the JList control
//        waveIndependentProductsJList.setListData(algorithmInfoArray);
//
//        //     setSelectionStatesWaveIndependentProductsJList();
//    }




//    private void handleWaveIndependentProductsJList() {
//
//        l2genData.disableEvent(l2genData.WAVE_INDEPENDENT_PRODUCT_CHANGED);
//
//        Object[] selectedElements = waveIndependentProductsJList.getSelectedValues();
//
//        for (Object object : selectedElements) {
//            AlgorithmInfo algorithmInfo = (AlgorithmInfo) object;
//
//            if (!algorithmInfo.isSelected()) {
//                l2genData.setSelectedWaveIndependentProduct(algorithmInfo, true);
//            }
//        }
//
//        waveIndependentProductsJList.clearSelection();
//        l2genData.enableEvent(l2genData.WAVE_INDEPENDENT_PRODUCT_CHANGED);
//    }


//    private void setSelectionStatesWaveIndependentProductsJList() {
//        waveIndependentProductsJList.clearSelection();
//
//        int idx = 0;
//
//        for (ProductInfo productInfo : l2genData.getWaveIndependentProductInfoArray()) {
//            for (AlgorithmInfo algorithmInfo : productInfo.getAlgorithmInfoArrayList()) {
//
//                if (algorithmInfo.isSelected() == true) {
//                    waveIndependentProductsJList.setSelectedIndex(idx);
//                }
//
//                idx++;
//            }
//        }
//    }